// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CRAD_cpp
Rcpp::List CRAD_cpp(const arma::mat& X, const arma::mat& X_lin, const arma::vec& knots, const arma::uvec& knotsidx, bool NS, double bdmargin);
RcppExport SEXP _gambms_CRAD_cpp(SEXP XSEXP, SEXP X_linSEXP, SEXP knotsSEXP, SEXP knotsidxSEXP, SEXP NSSEXP, SEXP bdmarginSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_lin(X_linSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type knotsidx(knotsidxSEXP);
    Rcpp::traits::input_parameter< bool >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< double >::type bdmargin(bdmarginSEXP);
    rcpp_result_gen = Rcpp::wrap(CRAD_cpp(X, X_lin, knots, knotsidx, NS, bdmargin));
    return rcpp_result_gen;
END_RCPP
}
// CRAD_test_cpp
arma::mat CRAD_test_cpp(const arma::mat& testX, const arma::mat& X_lin, const Rcpp::List& CRADlist);
RcppExport SEXP _gambms_CRAD_test_cpp(SEXP testXSEXP, SEXP X_linSEXP, SEXP CRADlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type testX(testXSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_lin(X_linSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type CRADlist(CRADlistSEXP);
    rcpp_result_gen = Rcpp::wrap(CRAD_test_cpp(testX, X_lin, CRADlist));
    return rcpp_result_gen;
END_RCPP
}
// gambmsEVEN
Rcpp::List gambmsEVEN(const arma::vec& y, const double& glmWeight, const arma::mat& X, const arma::mat& X_pr, const arma::mat& XLin, const arma::vec& offset, const arma::uvec& maxk, const arma::vec& Lambda, const unsigned& familyLink, const unsigned& gprior, const double& aa, const double& bb, const double& ss, const double& gg, const bool& enumerate, unsigned numMCcandidate, const unsigned& MCiter, const unsigned& MCMCiter, const Rcpp::Function& Rglm, const Rcpp::Function& nearPDres, const bool& storeFit, unsigned printiter);
RcppExport SEXP _gambms_gambmsEVEN(SEXP ySEXP, SEXP glmWeightSEXP, SEXP XSEXP, SEXP X_prSEXP, SEXP XLinSEXP, SEXP offsetSEXP, SEXP maxkSEXP, SEXP LambdaSEXP, SEXP familyLinkSEXP, SEXP gpriorSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP ssSEXP, SEXP ggSEXP, SEXP enumerateSEXP, SEXP numMCcandidateSEXP, SEXP MCiterSEXP, SEXP MCMCiterSEXP, SEXP RglmSEXP, SEXP nearPDresSEXP, SEXP storeFitSEXP, SEXP printiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double& >::type glmWeight(glmWeightSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_pr(X_prSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XLin(XLinSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type maxk(maxkSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type familyLink(familyLinkSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type gprior(gpriorSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< const double& >::type gg(ggSEXP);
    Rcpp::traits::input_parameter< const bool& >::type enumerate(enumerateSEXP);
    Rcpp::traits::input_parameter< unsigned >::type numMCcandidate(numMCcandidateSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type MCiter(MCiterSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type MCMCiter(MCMCiterSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Function& >::type Rglm(RglmSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Function& >::type nearPDres(nearPDresSEXP);
    Rcpp::traits::input_parameter< const bool& >::type storeFit(storeFitSEXP);
    Rcpp::traits::input_parameter< unsigned >::type printiter(printiterSEXP);
    rcpp_result_gen = Rcpp::wrap(gambmsEVEN(y, glmWeight, X, X_pr, XLin, offset, maxk, Lambda, familyLink, gprior, aa, bb, ss, gg, enumerate, numMCcandidate, MCiter, MCMCiter, Rglm, nearPDres, storeFit, printiter));
    return rcpp_result_gen;
END_RCPP
}
// gambmsFREE
Rcpp::List gambmsFREE(const arma::vec& y, const double& glmWeight, const arma::mat& X, const arma::mat& X_pr, const arma::mat& XLin, const arma::vec& offset, const arma::uvec& maxk, const arma::vec& Lambda, const unsigned& familyLink, const unsigned& gprior, const double& aa, const double& bb, const double& ss, const double& gg, const int& initS, const int& MCMCiter, const int& thin, double bir_p, double dea_p, double nu, const Rcpp::Function& Rglm, const Rcpp::Function& nearPDres, const bool& storeFit, unsigned printiter);
RcppExport SEXP _gambms_gambmsFREE(SEXP ySEXP, SEXP glmWeightSEXP, SEXP XSEXP, SEXP X_prSEXP, SEXP XLinSEXP, SEXP offsetSEXP, SEXP maxkSEXP, SEXP LambdaSEXP, SEXP familyLinkSEXP, SEXP gpriorSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP ssSEXP, SEXP ggSEXP, SEXP initSSEXP, SEXP MCMCiterSEXP, SEXP thinSEXP, SEXP bir_pSEXP, SEXP dea_pSEXP, SEXP nuSEXP, SEXP RglmSEXP, SEXP nearPDresSEXP, SEXP storeFitSEXP, SEXP printiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double& >::type glmWeight(glmWeightSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_pr(X_prSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XLin(XLinSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type maxk(maxkSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type familyLink(familyLinkSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type gprior(gpriorSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< const double& >::type gg(ggSEXP);
    Rcpp::traits::input_parameter< const int& >::type initS(initSSEXP);
    Rcpp::traits::input_parameter< const int& >::type MCMCiter(MCMCiterSEXP);
    Rcpp::traits::input_parameter< const int& >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type bir_p(bir_pSEXP);
    Rcpp::traits::input_parameter< double >::type dea_p(dea_pSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Function& >::type Rglm(RglmSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Function& >::type nearPDres(nearPDresSEXP);
    Rcpp::traits::input_parameter< const bool& >::type storeFit(storeFitSEXP);
    Rcpp::traits::input_parameter< unsigned >::type printiter(printiterSEXP);
    rcpp_result_gen = Rcpp::wrap(gambmsFREE(y, glmWeight, X, X_pr, XLin, offset, maxk, Lambda, familyLink, gprior, aa, bb, ss, gg, initS, MCMCiter, thin, bir_p, dea_p, nu, Rglm, nearPDres, storeFit, printiter));
    return rcpp_result_gen;
END_RCPP
}
// gambmsVS
Rcpp::List gambmsVS(const arma::vec& y, const double& glmWeight, const arma::mat& X, const arma::mat& X_pr, const arma::mat& XLin, const arma::vec& offset, const arma::uvec& maxk, const arma::vec& Lambda, const unsigned& familyLink, const unsigned& gprior, const double& aa, const double& bb, const double& ss, const double& gg, const unsigned& MCMCiter, const Rcpp::Function& Rglm, const Rcpp::Function& nearPDres, bool getmeMAP, const bool& storeFit, unsigned printiter);
RcppExport SEXP _gambms_gambmsVS(SEXP ySEXP, SEXP glmWeightSEXP, SEXP XSEXP, SEXP X_prSEXP, SEXP XLinSEXP, SEXP offsetSEXP, SEXP maxkSEXP, SEXP LambdaSEXP, SEXP familyLinkSEXP, SEXP gpriorSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP ssSEXP, SEXP ggSEXP, SEXP MCMCiterSEXP, SEXP RglmSEXP, SEXP nearPDresSEXP, SEXP getmeMAPSEXP, SEXP storeFitSEXP, SEXP printiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double& >::type glmWeight(glmWeightSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_pr(X_prSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XLin(XLinSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type maxk(maxkSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type familyLink(familyLinkSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type gprior(gpriorSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< const double& >::type gg(ggSEXP);
    Rcpp::traits::input_parameter< const unsigned& >::type MCMCiter(MCMCiterSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Function& >::type Rglm(RglmSEXP);
    Rcpp::traits::input_parameter< const Rcpp::Function& >::type nearPDres(nearPDresSEXP);
    Rcpp::traits::input_parameter< bool >::type getmeMAP(getmeMAPSEXP);
    Rcpp::traits::input_parameter< const bool& >::type storeFit(storeFitSEXP);
    Rcpp::traits::input_parameter< unsigned >::type printiter(printiterSEXP);
    rcpp_result_gen = Rcpp::wrap(gambmsVS(y, glmWeight, X, X_pr, XLin, offset, maxk, Lambda, familyLink, gprior, aa, bb, ss, gg, MCMCiter, Rglm, nearPDres, getmeMAP, storeFit, printiter));
    return rcpp_result_gen;
END_RCPP
}
// rCH_cpp
arma::vec rCH_cpp(int nsamp, int burnin, const double& aa, const double& bb, const double& ss);
RcppExport SEXP _gambms_rCH_cpp(SEXP nsampSEXP, SEXP burninSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP ssSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type ss(ssSEXP);
    rcpp_result_gen = Rcpp::wrap(rCH_cpp(nsamp, burnin, aa, bb, ss));
    return rcpp_result_gen;
END_RCPP
}
// rGH_cpp
arma::vec rGH_cpp(int nsamp, int burnin, const double& aa, const double& bb, const double& xx, const double& zz);
RcppExport SEXP _gambms_rGH_cpp(SEXP nsampSEXP, SEXP burninSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP xxSEXP, SEXP zzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type xx(xxSEXP);
    Rcpp::traits::input_parameter< const double& >::type zz(zzSEXP);
    rcpp_result_gen = Rcpp::wrap(rGH_cpp(nsamp, burnin, aa, bb, xx, zz));
    return rcpp_result_gen;
END_RCPP
}
// rtCCH_cpp
arma::vec rtCCH_cpp(int nsamp, int burnin, const double& aa, const double& bb, const double& zz, const double& ss, const double& nu, const double& theta);
RcppExport SEXP _gambms_rtCCH_cpp(SEXP nsampSEXP, SEXP burninSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP zzSEXP, SEXP ssSEXP, SEXP nuSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type zz(zzSEXP);
    Rcpp::traits::input_parameter< const double& >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const double& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(rtCCH_cpp(nsamp, burnin, aa, bb, zz, ss, nu, theta));
    return rcpp_result_gen;
END_RCPP
}
// rAPL_cpp
arma::vec rAPL_cpp(int nsamp, int burnin, const double& aa, const double& bb, const double& zz, const double& ww, const double& xx, const double& yy);
RcppExport SEXP _gambms_rAPL_cpp(SEXP nsampSEXP, SEXP burninSEXP, SEXP aaSEXP, SEXP bbSEXP, SEXP zzSEXP, SEXP wwSEXP, SEXP xxSEXP, SEXP yySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const double& >::type aa(aaSEXP);
    Rcpp::traits::input_parameter< const double& >::type bb(bbSEXP);
    Rcpp::traits::input_parameter< const double& >::type zz(zzSEXP);
    Rcpp::traits::input_parameter< const double& >::type ww(wwSEXP);
    Rcpp::traits::input_parameter< const double& >::type xx(xxSEXP);
    Rcpp::traits::input_parameter< const double& >::type yy(yySEXP);
    rcpp_result_gen = Rcpp::wrap(rAPL_cpp(nsamp, burnin, aa, bb, zz, ww, xx, yy));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gambms_CRAD_cpp", (DL_FUNC) &_gambms_CRAD_cpp, 6},
    {"_gambms_CRAD_test_cpp", (DL_FUNC) &_gambms_CRAD_test_cpp, 3},
    {"_gambms_gambmsEVEN", (DL_FUNC) &_gambms_gambmsEVEN, 22},
    {"_gambms_gambmsFREE", (DL_FUNC) &_gambms_gambmsFREE, 24},
    {"_gambms_gambmsVS", (DL_FUNC) &_gambms_gambmsVS, 20},
    {"_gambms_rCH_cpp", (DL_FUNC) &_gambms_rCH_cpp, 5},
    {"_gambms_rGH_cpp", (DL_FUNC) &_gambms_rGH_cpp, 6},
    {"_gambms_rtCCH_cpp", (DL_FUNC) &_gambms_rtCCH_cpp, 8},
    {"_gambms_rAPL_cpp", (DL_FUNC) &_gambms_rAPL_cpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_gambms(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
